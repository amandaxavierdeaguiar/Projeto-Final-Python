"""migration_0

Revision ID: e569c16f19dd
Revises: 
Create Date: 2024-03-17 17:04:25.192706

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e569c16f19dd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False, unique=True),
                    sa.PrimaryKeyConstraint('id', name='category_pkey'),
                    sa.UniqueConstraint('name', name='category_name_key')
                    )
    op.create_table('supplier',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('supplier_id_seq'::regclass)"),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='supplier_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('brand',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False, unique=True),
                    sa.Column('supplier_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='brand_pkey'),
                    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], name='brand_supplier_id_fkey'),
                    sa.UniqueConstraint('name', name='brand_name_key')
                    )
    op.create_table('product',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('product_id_seq'::regclass)"),
                              autoincrement=True, nullable=False),
                    sa.Column('bar_cod', sa.VARCHAR(), autoincrement=False, nullable=False, unique=True),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
                    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
                    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name='product_category_id_fkey'),
                    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], name='product_brand_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='product_pkey'),
                    sa.UniqueConstraint('bar_cod', name='product_bar_cod_key'),
                    postgresql_ignore_search_path=False
                    )

    op.create_table('stock',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='stock_product_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='stock_pkey')
                    )
    op.create_table('user',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('login', sa.VARCHAR(), autoincrement=False, nullable=False, unique=True),
                    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('typeAccess', postgresql.ENUM('Admin', 'User', name='typeaccess'), autoincrement=False,
                              nullable=False),
                    sa.PrimaryKeyConstraint('id', name='user_pkey'),
                    sa.UniqueConstraint('login', name='user_login_key')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('stock')
    op.drop_table('product')
    op.drop_table('brand')
    op.drop_table('supplier')
    op.drop_table('category')
    # ### end Alembic commands ###
